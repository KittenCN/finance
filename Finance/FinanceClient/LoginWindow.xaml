<Window x:Class="FinanceClient.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:FinanceClient"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
        Title="LoginWindow" Width="400" Height="300" Style="{DynamicResource NoResize_Window}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/FinanceClient;Component/Resources/Styles/CheckBoxStyle.xaml" />
                <ResourceDictionary Source="/FinanceClient;Component/Resources/Styles/Storyboard.xaml" />
                <ResourceDictionary Source="/FinanceClient;Component/Resources/Styles/Buttons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource x:Key="ListUserInfoViewSource" />

            <Style x:Key="ButtonClose" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="normal" 
                               Width="39" Height="20"
                               RenderTransformOrigin="0.5,0.5" CornerRadius="0,15,0,0" >
                                    <Border.Background>
                                        <ImageBrush ImageSource="/FinanceClient;component/Resources/Images/btn_close_normal.png" />
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <!--  在 二维 x-y 坐标系内缩放对象  -->
                                            <ScaleTransform />
                                            <!--  表示一种二维扭曲。  -->
                                            <SkewTransform />
                                            <!--  在 二维 x-y 坐标系内围绕指定点按照顺时针方向旋转对象。  -->
                                            <RotateTransform />
                                            <!--  在 二维 x-y 坐标系中平移（移动）对象。  -->
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content=""
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border x:Name="highlight"  Width="{Binding Width, ElementName=normal}" Height="{Binding Height, ElementName=normal}" Opacity="0"
                                     RenderTransformOrigin="{Binding RenderTransformOrigin, ElementName=normal}"  CornerRadius="{Binding CornerRadius, ElementName=normal}" >
                                    <Border.Background>
                                        <ImageBrush Stretch="Fill" ImageSource="/FinanceClient;component/Resources/Images/btn_close_highlight.png" />
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              Content=""
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border x:Name="down" CornerRadius="{Binding CornerRadius, ElementName=normal}"
                                Width="{Binding Width, ElementName=normal}" 
                                Height="{Binding Height, ElementName=normal}" Opacity="0"
                                RenderTransformOrigin="{Binding RenderTransformOrigin, ElementName=normal}">
                                    <Border.Background>
                                        <ImageBrush ImageSource="/FinanceClient;component/Resources/Images/btn_close_down.png" />
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True" />
                                <Trigger Property="IsDefaulted" Value="True" />
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="highlight" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="down" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="normal" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="highlight" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="down" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonMin" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Image x:Name="mini_normal"
                                   Width="28"
                                   Height="20"
                                   RenderTransformOrigin="0.5,0.5"
                                   Source="/FinanceClient;component/Resources/Images/btn_mini_normal.png"
                                   Stretch="Fill">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <!--  在 二维 x-y 坐标系内缩放对象  -->
                                            <ScaleTransform />
                                            <!--  表示一种二维扭曲。  -->
                                            <SkewTransform />
                                            <!--  在 二维 x-y 坐标系内围绕指定点按照顺时针方向旋转对象。  -->
                                            <RotateTransform />
                                            <!--  在 二维 x-y 坐标系中平移（移动）对象。  -->
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content=""
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Image x:Name="mini_highlight"
                                   Width="28"
                                   Height="20"
                                   Opacity="0"
                                   RenderTransformOrigin="0.5,0.5"
                                   Source="/FinanceClient;component/Resources/Images/btn_mini_highlight.png"
                                   Stretch="Fill">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content=""
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Image x:Name="mini_down"
                                   Width="28"
                                   Height="20"
                                   Opacity="0"
                                   RenderTransformOrigin="0.5,0.5"
                                   Source="/FinanceClient;component/Resources/Images/btn_mini_down.png"
                                   Stretch="Fill">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True" />
                                <Trigger Property="IsDefaulted" Value="True" />
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="mini_highlight" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="mini_down" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="mini_normal" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="mini_highlight" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="mini_down" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--无边框窗体+特殊样式-->
            <Style x:Key="NoResize_Window" TargetType="{x:Type Window}">
                <Setter Property="ShowInTaskbar" Value="False" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontFamily" Value="Consolas,Microsoft YaHei" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="ResizeMode" Value="NoResize" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Grid Background="Transparent"  MouseDown="Window_MouseDown">
                                <Border CornerRadius="10" Height="{TemplateBinding Height}" 
                                    Width="{TemplateBinding Width}" >
                                    <Border.Background>
                                        <ImageBrush ImageSource="/FinanceClient;component/Resources/Images/bg.png" />
                                        <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF03036A" Offset="0" />
                                            <GradientStop Color="#FF03036A" Offset="0.204" />
                                            <GradientStop Color="#F203036A" Offset="0.415" />
                                            <GradientStop Color="#1103031A" Offset="0.689" />
                                            <GradientStop Color="#1103036A" Offset="1" />
                                        </LinearGradientBrush>-->
                                    </Border.Background>
                                    <!--<Border.Effect>
                                    <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="#FF898989"/>
                                </Border.Effect>-->
                                </Border>
                                <!-- <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" RadiusX="10" RadiusY="10">
                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="5" Color="#FF898989" />
                                </Rectangle.Effect>
                            </Rectangle>-->
                                <!--<TextBox Width="200" Height="20" Text="{TemplateBinding Self}" HorizontalAlignment="Left" VerticalAlignment="Top" />-->
                                <Button x:Name="BtnClose" Margin="0,-1.5,-1,0" Style="{DynamicResource ButtonClose}"
                              HorizontalAlignment="Right" VerticalAlignment="Top" Click="BtnClose_Click" />
                                <Button x:Name="BtnMin"
                    Margin="0,-1.5,38,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Style="{DynamicResource ButtonMin}" Click="BtnMin_Click" />
                                <Grid Margin="0,29.33,0,0">
                                    <Border Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"  
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Margin}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              CornerRadius="10"  >
                                        <ContentPresenter />
                                    </Border>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--有删除按钮-->
            <Style TargetType="ComboBox" x:Key="UserComboBoxStyle">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="3"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Grid x:Name="cboitem" SnapsToDevicePixels="true" FocusVisualStyle="{x:Null}">
                                            <Rectangle x:Name="BackgroundHighlight" FocusVisualStyle="{x:Null}" Margin="-1" Stroke="#A0FFFFFF"/>
                                            <ContentPresenter 
Content="{Binding UserName}" FocusVisualStyle="{x:Null}" 
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
x:Name="contentPresenter" Margin="{TemplateBinding Padding}"/>
                                            <Button Width="16" Height="16" DataContext="{Binding UserName}" HorizontalAlignment="Right" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Center" Margin="0,0,10,0" Click="BtnDeleteRecord_Click">
                                                <TextBlock Text="✖" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Button>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="cboitem" Property="Background" Value="LightBlue" />
                                            </Trigger>
                                            <Trigger Property="Selector.IsSelected" Value="True">
                                                <Setter TargetName="cboitem" Property="Background" Value="CadetBlue" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid>
            <Image Source="/FinanceClient;component/Resources/Images/cloud.png" Width="190" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,10,0,0">
                <Image.RenderTransform>
                    <TranslateTransform x:Name="cloud"></TranslateTransform>
                </Image.RenderTransform>
            </Image>
            <Border HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30,70,0,0">
                <Border.Effect>
                    <DropShadowEffect Opacity="0.7" ShadowDepth="10" Color="Red" />
                </Border.Effect>
                <Image Name="QQhead" Height="80" Width="80" />
            </Border>
            <ComboBox x:Name="cmb1" IsEditable="True"  DisplayMemberPath="UserName" Text="{Binding UserName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                     ItemsSource="{Binding Source={StaticResource ListUserInfoViewSource}}" FontSize="15" Height="25" HorizontalAlignment="Left"  
                     Margin="116,99,0,147" VerticalAlignment="Center" Width="180"  TextBoxBase.TextChanged="cmb1_TextChanged" 
                     Style="{StaticResource UserComboBoxStyle}">

            </ComboBox>
            <PasswordBox local:PasswordBoxBindingHelper.IsPasswordBindingEnabled="True"  local:PasswordBoxBindingHelper.BindedPassword="{Binding Path=UserPassword,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FontSize="15" Height="25" HorizontalAlignment="Left" Margin="116,129,0,117" Name="passwordBox1"  VerticalAlignment="Center" Width="180" />
            <CheckBox  Content="记住密码" IsThreeState="False" HorizontalAlignment="Left" Margin="115,135,0,0" Name="checkBox1" VerticalAlignment="Center" >
                <CheckBox.Triggers>
                    <EventTrigger RoutedEvent="CheckBox.Checked">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox1" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.01">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>True</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="CheckBox.Unchecked">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox2" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.01">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>False</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox1" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.01">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>False</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </CheckBox.Triggers>
            </CheckBox>
            <CheckBox Content="自动登陆"  IsThreeState="False" HorizontalAlignment="Left" Margin="190,135,0,0" Name="checkBox2" VerticalAlignment="Center" >
                <CheckBox.Triggers>
                    <EventTrigger RoutedEvent="CheckBox.Checked">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox1" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.01">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>True</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox2" Storyboard.TargetProperty="IsChecked">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.01">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>True</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </CheckBox.Triggers>
            </CheckBox>
            <Button Height="33" Width="181"  IsDefault="true"  Margin="10,230,0,0" Name="btnLogin" Click="Login_Click">
                <TextBlock FontSize="18" FontFamily="Consolas;Microsoft YaHei" Foreground="Blue" Text="登    录" />
            </Button>
            <TextBlock HorizontalAlignment="Left" Margin="310,25,0,0" Name="textBlock1" Text="注册账号" MouseDown="tbkRegistration_MouseDown" Visibility="Hidden">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Foreground" Value="SlateBlue" />
                        <Setter Property="Height" Value="22" />
                        <Setter Property="Width" Value="64" />
                        <Setter Property="Height" Value="22" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BitmapEffect" >
                                    <Setter.Value>
                                        <DropShadowBitmapEffect Color="Blue" Direction="-90" ShadowDepth="1" Softness="0.1" Opacity="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock  Margin="310,85,0,0" Name="textBlock2" Text="忘记密码" Style="{Binding ElementName=textBlock1,Path=Style}" Visibility="Hidden"/>
            <Image Source="/FinanceClient;Component/Resources/Images/移动彩条.png" Height="2" Width="273" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,190,00,0">
                <Image.RenderTransform>
                    <TranslateTransform x:Name="moveClour2"></TranslateTransform>
                </Image.RenderTransform>
            </Image>
            <Image Source="/FinanceClient;Component/Resources/Images/移动彩条.png" Height="2" Width="273" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,190,0,0">
                <Image.RenderTransform>
                    <TranslateTransform x:Name="moveClour"></TranslateTransform>
                </Image.RenderTransform>
            </Image>
            <ComboBox x:Name="cmbTid" IsEditable="True" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValue="{Binding Tid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="15" Height="25" HorizontalAlignment="Left"  Margin="116,159,0,87" VerticalAlignment="Center" Width="180" >

            </ComboBox>
            <Button  IsDefault="true"  Margin="310,159,10,87" Name="btnNew" Click="New_Click">
                <TextBlock FontSize="11" FontFamily="Consolas;Microsoft YaHei" Foreground="Blue" Text="新建账套" />
            </Button>
        </Grid>
        <Grid x:Name="LoadGrid" Visibility="Collapsed" IsVisibleChanged="HandleVisibleChanged">
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.2"  />
            </Grid.Background>
            <Grid.Resources>
                <SolidColorBrush Color="#FF007BE5" x:Key="CirclesColor" />
                <!--<SolidColorBrush Color="Black" x:Key="BackgroundColor" Opacity=".20" />-->
            </Grid.Resources>

            <Viewbox Width="100" Height="100"  
            HorizontalAlignment="Center"  
            VerticalAlignment="Center">
                <Grid x:Name="LayoutRoot"   
                Background="Transparent"  
                ToolTip="Please wait...."  
                HorizontalAlignment="Center"  
                VerticalAlignment="Center">
                    <TextBlock Text="Loading..."  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Foreground="#FFE3953D" FontWeight="Bold" />
                    <Canvas RenderTransformOrigin="0.5,0.5"  
                    HorizontalAlignment="Center"  
                    VerticalAlignment="Center" Width="120"  
                    Height="120" Loaded="HandleLoaded"  
                    Unloaded="HandleUnloaded"  >
                        <Ellipse x:Name="C0" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="1.0"/>
                        <Ellipse x:Name="C1" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.9"/>
                        <Ellipse x:Name="C2" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.8"/>
                        <Ellipse x:Name="C3" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.7"/>
                        <Ellipse x:Name="C4" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.6"/>
                        <Ellipse x:Name="C5" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.5"/>
                        <Ellipse x:Name="C6" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.4"/>
                        <Ellipse x:Name="C7" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.3"/>
                        <Ellipse x:Name="C8" Width="20" Height="20"  
                         Canvas.Left="0"  
                         Canvas.Top="0" Stretch="Fill"  
                         Fill="{StaticResource CirclesColor}" Opacity="0.2"/>
                        <Canvas.RenderTransform>
                            <RotateTransform x:Name="SpinnerRotate"  
                         Angle="0" />
                        </Canvas.RenderTransform>
                    </Canvas>
                </Grid>
            </Viewbox>
            <Border Cursor="Hand" Opacity="0.6" Margin="0,160,0,0" BorderBrush="#FF60C1C1" BorderThickness="0.5" Height="32" 
                    Canvas.Bottom="10" Canvas.Right="40" MouseLeftButtonDown="Yes_MouseLeftButtonDown"
                 Name="border1" Width="120" Background="#FFC7C7C7" CornerRadius="2">
                <TextBlock FontSize="25" Text="取消登录" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </Grid>

    </Grid>
</Window>
